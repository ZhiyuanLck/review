% fix specious space in \DTMsaveddatediff
\RequirePackage[calc]{datetime2}
\renewrobustcmd*{\DTMsaveddatediff}[3]{%
  \ifcsundef{@dtm@#1@year}%
  {%
     \PackageError{datetime2-calc}{Unknown date `#1'}{}%
  }%
  {%
     \ifcsundef{@dtm@#2@year}%
     {%
        \PackageError{datetime2-calc}{Unknown date `#1'}{}%
     }%
     {%
       \pgfcalendardatetojulian
        {\csname @dtm@#1@year\endcsname
        -\csname @dtm@#1@month\endcsname
        -\csname @dtm@#1@day\endcsname}
        {#3}%
       \pgfcalendardatetojulian
        {\csname @dtm@#2@year\endcsname
        -\csname @dtm@#2@month\endcsname
        -\csname @dtm@#2@day\endcsname}
        {\@dtm@julianday}%
       \advance#3 by -\@dtm@julianday\relax
    }%
  }%
}

\RequirePackage{expl3, xpatch}
\ProvidesExplPackage
  {rv-utils}
  {2020/09/26}
  {v1.0}
  {rv-utils}

\newcount\datediff

\bool_new:N \l__rv_utils_review_bool
\bool_new:N \g__rv_utils_review_today_bool
\tl_new:N   \g__rv_utils_review_date_tl

\bool_gset_true:N \g__rv_utils_review_today_bool
\tl_gset:Nn \g__rv_utils_review_date_tl { \today }

\cs_generate_variant:Nn \seq_set_split:Nnn { Nno }

\cs_new_protected:Npn \rv_utils_parse_kv:w #1=#2\rv_nil
  {
    \tl_clear_new:N \l__rv_utils_tmpa_tl
    \tl_clear_new:N \l__rv_utils_tmpb_tl
    \tl_set:Nn \l__rv_utils_tmpa_tl { #1 }
    \tl_set:Nn \l__rv_utils_tmpb_tl { #2 }
  }

\cs_new_protected:Nn \rv_utils_get_kv:nNN
  {
    \rv_utils_parse_kv:w #1\rv_nil
    \tl_set_eq:NN #2 \l__rv_utils_tmpa_tl
    \tl_set_eq:NN #3 \l__rv_utils_tmpb_tl
  }

% parse key=val to key, val
% #1 key=val #2 code
\cs_new_protected:Nn \rv_utils_do_kv:nn
  {
    \cs_set_protected:Npn \__rv_utils_do_kv_code:nn ##1 ##2 { #2 }
    \cs_generate_variant:Nn \__rv_utils_do_kv_code:nn { oo }
    \rv_utils_parse_kv:w #1\rv_nil
    \__rv_utils_do_kv_code:oo { \l__rv_utils_tmpa_tl } { \l__rv_utils_tmpb_tl }
  }
\cs_generate_variant:Nn \rv_utils_do_kv:nn { nx, xn, xx }

\cs_new_protected:Nn \rv_utils_do_kv_variable:nNNn
  {
    \cs_set_protected:Npn \__rv_utils_do_kv_variable_code: { #4 }
    \rv_utils_parse_kv:w #1\rv_nil
    \tl_clear_new:N #2
    \tl_clear_new:N #3
    \tl_set_eq:NN #2 \l__rv_utils_tmpa_tl
    \tl_set_eq:NN #3 \l__rv_utils_tmpb_tl
    \__rv_utils_do_kv_variable_code:
  }

\cs_new_protected:Nn \rv_seq_append_clist:Nn
  {
    \seq_clear_new:N \l__rv_tmpa_seq
    \seq_set_from_clist:Nn \l__rv_tmpa_seq { #2 }
    \seq_concat:NNN #1 #1 \l__rv_tmpa_seq
  }
\cs_generate_variant:Nn \rv_seq_append_clist:Nn { cn }

\cs_new_protected:Nn \rv_seq_gappend_clist:Nn
  {
    \seq_clear_new:N \l__rv_tmpa_seq
    \seq_set_from_clist:Nn \l__rv_tmpa_seq { #2 }
    \seq_gconcat:NNN #1 #1 \l__rv_tmpa_seq
  }
\cs_generate_variant:Nn \rv_seq_gappend_clist:Nn { cn }

\cs_new_protected:Nn \rv_seq_append_clist_remove_duplicates:Nn
  {
    \rv_seq_append_clist:Nn #1 { #2 }
    \seq_remove_duplicates:N #1
  }
\cs_generate_variant:Nn \rv_seq_append_clist_remove_duplicates:Nn { cn }

\cs_new_protected:Nn \rv_seq_gappend_clist_remove_duplicates:Nn
  {
    \rv_seq_gappend_clist:Nn #1 { #2 }
    \seq_gremove_duplicates:N #1
  }
\cs_generate_variant:Nn \rv_seq_gappend_clist_remove_duplicates:Nn { cn }

% get subkey from the keypath
% #1 index
% \cs_new_protected:Nn \rv_utils_subkey:n
  % {
    % \seq_set_split:Nno \l_tmpa_seq { / } { \l_keys_path_str }
    % \int_compare:nTF
      % { \seq_count:N \l_tmpa_seq < #1 }
      % {
        % \__rv_utils_msg_error:nxxx { wrong-level }
          % { \l_keys_path_str }
          % { \seq_count:N \l_tmpa_seq }
          % { #1 }
      % }
      % {
        % \seq_item:Nn \l_tmpa_seq { #1 }
      % }
  % }

% wrapper
% #1 cs #2 wrap before #3 wrap after
% \cs_new_protected:Nn \rv_wrap:Nnn
  % {
    % \xpretocmd{#1}{#2}{}
      % {
        % \__rv_utils_msg_error:nnn
          % { patch-fail }
          % { before }
          % { #1 }
      % }
    % \xapptocmd{#1}{#3}{}
      % {
        % \__rv_utils_msg_error:nnn
          % { patch-fail }
          % { after }
          % { #1 }
      % }
  % }

% \cs_new_protected:Nn \rv_wrap_multi:nnn
  % {
    % \clist_map_inline:nn { #1 }
      % { \rv_wrap:Nnn { ##1 } { #2 } { #3 } }
  % }

\NewDocumentCommand { \setdate } { m }
  {
    \tl_gset:Nn \g__rv_utils_review_date_tl { #1 }
    \bool_gset_false:N \g__rv_utils_review_today_bool
  }

% #1 review point #2 date to be compared
\prg_new_protected_conditional:Nnn \rv_utils_if_review:Nn {T, F, TF}
  {
    \DTMsavedate{recent}{#2}
    \DTMsavedate{today}{\g__rv_utils_review_date_tl}
    \DTMsaveddatediff{today}{recent}{\datediff}% specious blank
    \bool_set_false:N \l__rv_utils_review_bool
    \clist_map_inline:Nn #1
      {
        \int_compare:nT { \datediff == ##1 }
          {
            \bool_set_true:N \l__rv_utils_review_bool
            \clist_map_break:
          }
      }
    \bool_if:nTF { \l__rv_utils_review_bool }
      { \prg_return_true: }
      { \prg_return_false: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% msg

\cs_new_protected:Nn \__rv_utils_msg_new:nn
  {
    \msg_new:nnn { rv-utils } { #1 } { #2 }
  }

\cs_new_protected:Nn \__rv_utils_msg_new:nnn
  {
    \msg_new:nnnn { rv-utils } { #1 } { #2 } { #3 }
  }

\cs_new_protected:Nn \__rv_utils_msg_error:nnnn
  {
    \msg_error:nnnnn { rv-utils } { #1 } { #2 } { #3 } { #4 }
  }
\cs_generate_variant:Nn \__rv_utils_msg_error:nnnn { nxxx }

\__rv_utils_msg_new:nn { wrong-level }
  {
    Key~ path~ '#1'~ is~ a~ #2-level~ path~, but~ you~ require~ level~ #3.
  }

\__rv_utils_msg_new:nn { patch-fail }
  {
    Wrapping~ #1~ command~ '#2'~ failed.
  }

\file_input_stop:
