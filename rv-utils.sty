% fix specious space in \DTMsaveddatediff
\RequirePackage[calc]{datetime2}
\renewrobustcmd*{\DTMsaveddatediff}[3]{%
  \ifcsundef{@dtm@#1@year}%
  {%
     \PackageError{datetime2-calc}{Unknown date `#1'}{}%
  }%
  {%
     \ifcsundef{@dtm@#2@year}%
     {%
        \PackageError{datetime2-calc}{Unknown date `#1'}{}%
     }%
     {%
       \pgfcalendardatetojulian
        {\csname @dtm@#1@year\endcsname
        -\csname @dtm@#1@month\endcsname
        -\csname @dtm@#1@day\endcsname}
        {#3}%
       \pgfcalendardatetojulian
        {\csname @dtm@#2@year\endcsname
        -\csname @dtm@#2@month\endcsname
        -\csname @dtm@#2@day\endcsname}
        {\@dtm@julianday}%
       \advance#3 by -\@dtm@julianday\relax
    }%
  }%
}

\RequirePackage{expl3, xpatch}
\ProvidesExplPackage
  {rv-utils}
  {2020/10/05}
  {v1.0}
  {rv-utils}

\newcount\rv_date_diff

\bool_new:N \l__rv_utils_review_bool
\bool_new:N \g__rv_utils_review_today_bool
\tl_new:N   \g__rv_utils_review_date_tl
\tl_clear_new:N \l_tmpc_tl
\tl_clear_new:N \l_tmpd_tl

\bool_gset_true:N \g__rv_utils_review_today_bool
\tl_gset:Nn \g__rv_utils_review_date_tl { \today }

\cs_generate_variant:Nn \seq_set_split:Nnn { Nno }
\prg_generate_conditional_variant:Nnn \seq_if_in:Nn { Nx, cx } { T, F, TF, p }
\prg_generate_conditional_variant:Nnn \clist_if_in:Nn { Nx, cx } { T, F, TF, p }
\prg_generate_conditional_variant:Nnn \rv_utils_if_review:Nnn { cnn } { T, F, TF, p }

\cs_new_protected:Npn \rv_utils_parse_kv:w #1=#2\rv_nil
  {
    \tl_clear_new:N \l__rv_utils_tmpa_tl
    \tl_clear_new:N \l__rv_utils_tmpb_tl
    \tl_set:Nn \l__rv_utils_tmpa_tl { #1 }
    \tl_set:Nn \l__rv_utils_tmpb_tl { #2 }
  }

\cs_new_protected:Nn \rv_utils_get_kv:nNN
  {
    \rv_utils_parse_kv:w #1\rv_nil
    \tl_set_eq:NN #2 \l__rv_utils_tmpa_tl
    \tl_set_eq:NN #3 \l__rv_utils_tmpb_tl
  }

% parse key=val to key, val
% #1 key=val #2 code
\cs_new_protected:Nn \rv_utils_do_kv:nn
  {
    \cs_set_protected:Npn \__rv_utils_do_kv_code:nn ##1 ##2 { #2 }
    \cs_generate_variant:Nn \__rv_utils_do_kv_code:nn { oo }
    \rv_utils_parse_kv:w #1\rv_nil
    \__rv_utils_do_kv_code:oo { \l__rv_utils_tmpa_tl } { \l__rv_utils_tmpb_tl }
  }
\cs_generate_variant:Nn \rv_utils_do_kv:nn { nx, xn, xx }

\cs_new_protected:Nn \rv_utils_do_kv_variable:nNNn
  {
    \cs_set_protected:Npn \__rv_utils_do_kv_variable_code: { #4 }
    \rv_utils_parse_kv:w #1\rv_nil
    \tl_clear_new:N #2
    \tl_clear_new:N #3
    \tl_set_eq:NN #2 \l__rv_utils_tmpa_tl
    \tl_set_eq:NN #3 \l__rv_utils_tmpb_tl
    \__rv_utils_do_kv_variable_code:
  }

\cs_new_protected:Nn \rv_seq_append_clist:Nn
  {
    \seq_clear_new:N \l__rv_tmpa_seq
    \seq_set_from_clist:Nn \l__rv_tmpa_seq { #2 }
    \seq_concat:NNN #1 #1 \l__rv_tmpa_seq
  }
\cs_generate_variant:Nn \rv_seq_append_clist:Nn { cn }

\cs_new_protected:Nn \rv_seq_gappend_clist:Nn
  {
    \seq_clear_new:N \l__rv_tmpa_seq
    \seq_set_from_clist:Nn \l__rv_tmpa_seq { #2 }
    \seq_gconcat:NNN #1 #1 \l__rv_tmpa_seq
  }
\cs_generate_variant:Nn \rv_seq_gappend_clist:Nn { cn }

\cs_new_protected:Nn \rv_seq_append_clist_remove_duplicates:Nn
  {
    \rv_seq_append_clist:Nn #1 { #2 }
    \seq_remove_duplicates:N #1
  }
\cs_generate_variant:Nn \rv_seq_append_clist_remove_duplicates:Nn { cn }

\cs_new_protected:Nn \rv_seq_gappend_clist_remove_duplicates:Nn
  {
    \rv_seq_gappend_clist:Nn #1 { #2 }
    \seq_gremove_duplicates:N #1
  }
\cs_generate_variant:Nn \rv_seq_gappend_clist_remove_duplicates:Nn { cn }

\NewDocumentCommand { \setdate } { m }
  {
    \tl_gset:Nn \g__rv_utils_review_date_tl { #1 }
    \bool_gset_false:N \g__rv_utils_review_today_bool
  }


% test if B - A  is in seq
% #1 review point seq #2 date A #3 date B
\prg_new_conditional:Nnn \rv_utils_if_review:Nnn { T, F, TF, p }
  {
    \DTMsavedate{recent}{#2}
    \DTMsavedate{today}{#3}
    \DTMsaveddatediff{today}{recent}{\rv_date_diff}% specious blank
    \bool_set_false:N \l__rv_utils_review_bool
    \seq_if_in:NxTF #1 { \the\rv_date_diff }
      { \prg_return_true: }
      { \prg_return_false: }
  }

% #1 review point seq #2 date A #3 date B
\prg_new_conditional:Nnn \rv_utils_if_review:nnn { T, F, TF, p }
  {
    \DTMsavedate{recent}{#2}
    \DTMsavedate{today}{#3}
    \DTMsaveddatediff{today}{recent}{\rv_date_diff}% specious blank
    \bool_set_false:N \l__rv_utils_review_bool
    \clist_if_in:nnTF { #1 } { \the\rv_date_diff }
      { \prg_return_true: }
      { \prg_return_false: }
  }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% msg

% set new msg function
% #1 module name=module abbr
\cs_new_protected:Nn \rv_utils_set_msg_cs:n
  {
    \str_if_in:nnTF { #1 } { = }
      { \rv_utils_get_kv:nNN { #1 } }
      { \rv_utils_get_kv:nNN { #1=#1 } }
    \l_tmpa_tl \l_tmpb_tl
    \regex_replace_all:nnN { - } { _ } \l_tmpb_tl
    \cs_gset_protected:cn { __\l_tmpb_tl _msg_new:nn }
      {
        \exp_args:NV \msg_new:nnn \l_tmpa_tl { ##1 } { ##2 }
      }
    \cs_gset_protected:cn { __\l_tmpb_tl _msg_new:nnn }
      {
        \exp_args:NV \msg_new:nnnn \l_tmpa_tl { ##1 } { ##2 } { ##3 }
      }
    \clist_map_inline:nn { fatal, critical, error, warning, info, log, none }
      {
        \__rv_utils_set_msg_issue_cs:VVn \l_tmpa_tl \l_tmpb_tl { ##1 }
      }
    \cs_gset:Nn \msg_fatal_text:n { Package~ ##1~ Error }
    \cs_gset:Nn \msg_critical_text:n { Package~ ##1~ Error }
  }

% #1 model name #2 transformed model abbr #3 issue type
\cs_new_protected:Nn \__rv_utils_set_msg_issue_cs:nnn
  {
    \cs_gset_protected:cn { __#2_msg_#3:n }
      {
        \cs_if_exist_use:c { msg_#3:nn } { #1 } { ##1 }
      }
    \cs_gset_protected:cn { __#2_msg_#3:nn }
      {
        \cs_if_exist_use:c { msg_#3:nnn } { #1 } { ##1 } { ##2 }
      }
    \cs_gset_protected:cn { __#2_msg_#3:nnn }
      {
        \cs_if_exist_use:c { msg_#3:nnnn } { #1 } { ##1 } { ##2 } { ##3 }
      }
    \cs_gset_protected:cn { __#2_msg_#3:nnnn }
      {
        \cs_if_exist_use:c { msg_#3:nnnnn } { #1 } { ##1 }
          { ##2 } { ##3 } { ##4 }
      }
    \cs_gset_protected:cn { __#2_msg_#3:nnnnn }
      {
        \cs_if_exist_use:c { msg_#3:nnnnnn } { #1 } { ##1 }
          { ##2 } { ##3 } { ##4 } { ##5 }
      }
    \cs_generate_variant:cn { __#2_msg_#3:nn } { nx }
    \cs_generate_variant:cn { __#2_msg_#3:nnn } { nxx }
    \cs_generate_variant:cn { __#2_msg_#3:nnnn } { nxxx }
    \cs_generate_variant:cn { __#2_msg_#3:nnnnn } { nxxxx }
  }
\cs_generate_variant:Nn \__rv_utils_set_msg_issue_cs:nnn { VVn }

% replace #1 with #2 in #3 and set eq to #4
\cs_new_protected:Nn \rv_utils_regex_replace_all:nnnN
  {
    \tl_set:Nn \l__rv_utils_regex_tmp_tl { #3 }
    \regex_replace_all:nnN { #1 } { #2 } \l__rv_utils_regex_tmp_tl
    \tl_set_eq:NN #4 \l__rv_utils_regex_tmp_tl
  }

\cs_new_protected:Nn \__rv_utils_msg_new:nn
  {
    \msg_new:nnn { rv-utils } { #1 } { #2 }
  }

\cs_new_protected:Nn \__rv_utils_msg_new:nnn
  {
    \msg_new:nnnn { rv-utils } { #1 } { #2 } { #3 }
  }

\cs_new_protected:Nn \__rv_utils_msg_error:nnnn
  {
    \msg_error:nnnnn { rv-utils } { #1 } { #2 } { #3 } { #4 }
  }
\cs_generate_variant:Nn \__rv_utils_msg_error:nnnn { nxxx }

\__rv_utils_msg_new:nn { wrong-level }
  {
    Key~ path~ '#1'~ is~ a~ #2-level~ path~, but~ you~ require~ level~ #3.
  }

\__rv_utils_msg_new:nn { patch-fail }
  {
    Wrapping~ #1~ command~ '#2'~ failed.
  }

\file_input_stop:
